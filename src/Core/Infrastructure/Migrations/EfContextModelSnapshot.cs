// <auto-generated />
using System;
using Infrastructure.Respositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(EfContext))]
    partial class EfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationCore.Entities.ConteudoAnexoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anexo")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<string>("NomeOriginal")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("PK_ConteudoAnexo");

                    b.HasIndex("IdConteudo")
                        .HasName("IX_IdConteudo");

                    b.ToTable("ConteudoAnexo");
                });

            modelBuilder.Entity("ApplicationCore.Entities.ConteudoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("PK_Conteudo");

                    b.ToTable("Conteudo");
                });

            modelBuilder.Entity("ApplicationCore.Entities.GrupoUsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_GrupoUsuario");

                    b.ToTable("GrupoUsuario");
                });

            modelBuilder.Entity("ApplicationCore.Entities.GrupoUsuarioPermisaoAcaoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdGrupoUsuario")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPermissaoAcao")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_GrupoUsuarioPermisaoAcao");

                    b.HasIndex("IdGrupoUsuario")
                        .HasName("IX_IdGrupoUsuario");

                    b.HasIndex("IdPermissaoAcao")
                        .HasName("IX_IdPermissaoAcao");

                    b.ToTable("GrupoUsuarioPermisaoAcao");
                });

            modelBuilder.Entity("ApplicationCore.Entities.PermissaoAcaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPermissao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoAcao")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_PermissaoAcao");

                    b.HasIndex("IdPermissao")
                        .HasName("IX_IdPermissao");

                    b.ToTable("PermissaoAcao");
                });

            modelBuilder.Entity("ApplicationCore.Entities.PermissaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NomeGrupo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id")
                        .HasName("PK_Permissao");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("ApplicationCore.Entities.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaProduto")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoLonga")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("TotalDetratores")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPromotores")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Produto");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdConteudo")
                        .HasName("IX_IdConteudo");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ApplicationCore.Entities.ProdutoNpsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataLimite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataResposta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ProdutoNps");

                    b.HasIndex("IdProduto")
                        .HasName("IX_IdProduto");

                    b.ToTable("ProdutoNps");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("IdGrupoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70);

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id")
                        .HasName("PK_Usuario");

                    b.HasIndex("IdGrupoUsuario")
                        .HasName("IX_IdGrupoUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ApplicationCore.Entities.ConteudoAnexoEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.ConteudoEntity", "Conteudo")
                        .WithMany("ConteudoAnexo")
                        .HasForeignKey("IdConteudo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.GrupoUsuarioPermisaoAcaoEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.GrupoUsuarioEntity", "GrupoUsuario")
                        .WithMany("GrupoUsuarioPermisaoAcao")
                        .HasForeignKey("IdGrupoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.PermissaoAcaoEntity", "PermissaoAcao")
                        .WithMany("GrupoUsuarioPermisaoAcao")
                        .HasForeignKey("IdPermissaoAcao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.PermissaoAcaoEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.PermissaoEntity", "Permissao")
                        .WithMany("PermissaoAcao")
                        .HasForeignKey("IdPermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.ProdutoEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.ConteudoEntity", "Conteudo")
                        .WithMany("Produto")
                        .HasForeignKey("IdConteudo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.ProdutoNpsEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.ProdutoEntity", "Produto")
                        .WithMany("ProdutoNps")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.UsuarioEntity", b =>
                {
                    b.HasOne("ApplicationCore.Entities.GrupoUsuarioEntity", "GrupoUsuario")
                        .WithMany("Usuario")
                        .HasForeignKey("IdGrupoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
